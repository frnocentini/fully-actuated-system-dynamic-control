function G = gravload(rob,in2)
%% GRAVLOAD - Computation of the configuration dependent vector of gravitational load forces/torques for PANDA 
% ========================================================================= 
%    
%    G = gravload(rob,q) 
%    G = rob.gravload(q) 
%    
%  Description:: 
%    Given a full set of joint variables this function computes the 
%    configuration dependent vector of gravitational load forces/torques. 
%    
%  Input:: 
%    rob: robot object of PANDA specific class 
%    q:  7-element vector of generalized 
%         coordinates 
%    Angles have to be given in radians! 
%    
%  Output:: 
%    G:  [7x1] vector of gravitational load forces/torques 
%    
%  Example:: 
%    --- 
%    
%  Known Bugs:: 
%    --- 
%    
%  TODO:: 
%    --- 
%    
%  References:: 
%    1) Robot Modeling and Control - Spong, Hutchinson, Vidyasagar 
%    2) Modelling and Control of Robot Manipulators - Sciavicco, Siciliano 
%    3) Introduction to Robotics, Mechanics and Control - Craig 
%    4) Modeling, Identification & Control of Robots - Khalil & Dombre 
%    
%  Authors:: 
%    This is an autogenerated function! 
%    Code generator written by: 
%    Joern Malzahn 
%    2012 RST, Technische Universitaet Dortmund, Germany 
%    http://www.rst.e-technik.tu-dortmund.de 
%    
%  See also inertia.
%    
    
% Copyright (C) 1993-2023, by Peter I. Corke 
% Copyright (C) 2012-2023, by Joern Malzahn 
% 
% This file has been automatically generated with The Robotics Toolbox for Matlab (RTB). 
% 
% RTB and code generated with RTB is free software: you can redistribute it and/or modify 
% it under the terms of the GNU Lesser General Public License as published by 
% the Free Software Foundation, either version 3 of the License, or 
% (at your option) any later version. 
%  
% RTB is distributed in the hope that it will be useful, 
% but WITHOUT ANY WARRANTY; without even the implied warranty of 
% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the 
% GNU Lesser General Public License for more details. 
%  
% You should have received a copy of the GNU Leser General Public License 
% along with RTB.  If not, see <http://www.gnu.org/licenses/>. 
% 
% http://www.petercorke.com 
% 
% The code generation module emerged during the work on a project funded by 
% the German Research Foundation (DFG, BE1569/7-1). The authors gratefully  
% acknowledge the financial support. 

%% Bugfix
%  In some versions the symbolic toolbox writes the constant $pi$ in
%  capital letters. This way autogenerated functions might not work properly.
%  To fix this issue a local variable is introduced:
PI = pi;
   




%    This function was generated by the Symbolic Math Toolbox version 23.2.
%    14-Dec-2023 11:40:46
sympref('FloatingPointOutput',true)
syms m6 m7
syms r6x r6y r6z
syms r7x r7y r7z

q2 = in2(:,2);
q3 = in2(:,3);
q4 = in2(:,4);
q5 = in2(:,5);
q6 = in2(:,6);
q7 = in2(:,7);

t2 = cos(q2);
t3 = cos(q3);
t4 = cos(q4);
t5 = cos(q5);
t6 = cos(q6);
t7 = cos(q7);
t8 = sin(q2);
t9 = sin(q3);
t10 = sin(q4);
t11 = sin(q5);
t12 = sin(q6);
t13 = sin(q7);
t14 = t2.*t4.*(9.81e+2./1.0e+2);
t15 = t2.*t10.*(9.81e+2./1.0e+2);
t16 = t8.*t9.*t11.*(9.81e+2./1.0e+2);
t17 = t3.*t4.*t8.*(9.81e+2./1.0e+2);
t18 = t3.*t8.*t10.*(9.81e+2./1.0e+2);
t19 = t5.*t8.*t9.*(9.81e+2./1.0e+2);
t22 = t2.*t4.*5.5382355e+1;
t23 = t2.*t10.*3.4160382e+1;
t24 = t3.*t8.*3.9791322e+1;
t25 = t8.*t9.*7.3951704e+1;
t26 = t2.*1.19373966;
t27 = t3.*t8.*1.19373966;
t28 = t3.*t4.*t8.*3.4160382e+1;
t29 = t3.*t8.*t10.*5.5382355e+1;
t30 = t8.*t9.*t11.*2.1221973e+1;
t31 = t3.*t8.*5.17287186;
t32 = t8.*t9.*5.17287186;
t34 = t5.*t8.*t9.*2.1221973e+1;
t35 = t2.*t4.*1.161452988;
t37 = t2.*t10.*1.161452988;
t41 = t2.*t4.*1.7508127725;
t42 = t8.*t9.*2.818231515;
t43 = t2.*t4.*2.1221973e-3;
t44 = t2.*t4.*4.45661433e-1;
t45 = t2.*t10.*2.288745594;
t46 = t8.*t9.*2.288745594;
t47 = t3.*t4.*t8.*1.161452988;
t48 = t3.*t8.*t10.*1.161452988;
t49 = t5.*t8.*t9.*1.612869948;
t50 = t8.*t9.*t11.*1.612869948;
t53 = t3.*t8.*t10.*1.7508127725;
t54 = t3.*t4.*t8.*2.288745594;
t55 = t3.*t8.*t10.*2.1221973e-3;
t56 = t5.*t8.*t9.*2.1221973e-3;
t57 = t3.*t8.*t10.*4.45661433e-1;
t58 = t8.*t9.*t11.*4.45661433e-1;
t20 = -t17;
t33 = -t28;
t38 = -t32;
t40 = -t37;
t52 = -t49;
t59 = -t54;
t61 = -t56;
t62 = t14+t18;
t63 = t15+t20;
t64 = t6.*t62;
t65 = t12.*t62;
t66 = t5.*t63;
t67 = t11.*t63;
t69 = t66.*2.1633;
t70 = t67.*2.1633;
t71 = t66.*1.644108e-1;
t72 = t67.*1.644108e-1;
t73 = t66.*4.54293e-2;
t74 = t67.*2.1633e-4;
t75 = t16+t66;
t83 = -t13.*(t19-t67);
t84 = m6.*r6y.*(t19-t67);
t77 = t6.*t75;
t78 = t12.*t75;
t85 = t65+t77;
t93 = -m7.*(t64-t78);
t100 = m7.*r7x.*(t64-t78);
t102 = m6.*r6z.*(t64-t78);
t120 = -t12.*(m6.*(t64-t78)+m7.*(t64-t78));
t121 = t6.*(m6.*(t64-t78)+m7.*(t64-t78));
t86 = m6.*t85;
t88 = t7.*t85;
t91 = t13.*t85;
t96 = r7y.*t93;
t122 = t121.*(-3.3e+1./4.0e+2);
t123 = t121.*(3.3e+1./4.0e+2);
t89 = r6y.*t86;
t90 = r6z.*t86;
t104 = t83+t88;
t110 = -m7.*r7x.*(t91+t7.*(t19-t67));
t115 = m7.*t13.*(t91+t7.*(t19-t67));
t129 = -t7.*(t96+m7.*r7z.*(t91+t7.*(t19-t67)));
t106 = m7.*r7y.*t104;
t107 = m7.*r7z.*t104;
t108 = m7.*t7.*t104;
t109 = m7.*t13.*t104;
t111 = -t106;
t116 = t109.*(1.1e+1./1.25e+2);
t124 = t100+t107;
t131 = t86+t108+t115;
t137 = -t11.*(t34-t70-t109+m6.*(t19-t67)+m7.*t7.*(t91+t7.*(t19-t67)));
t138 = t5.*(t34-t70-t109+m6.*(t19-t67)+m7.*t7.*(t91+t7.*(t19-t67)));
t141 = t11.*(t34-t70-t109+m6.*(t19-t67)+m7.*t7.*(t91+t7.*(t19-t67))).*(-4.8e+1./1.25e+2);
t126 = t7.*t124;
t127 = t13.*t124;
t132 = t6.*t131;
t133 = t12.*t131;
t142 = t138.*(4.8e+1./1.25e+2);
t143 = t138.*(3.3e+1./4.0e+2);
t159 = -t6.*(t90+t106-t116+m7.*r7x.*(t91+t7.*(t19-t67))+m7.*t7.*(t91+t7.*(t19-t67)).*(1.1e+1./1.25e+2)+m6.*r6x.*(t19-t67));
t160 = -t12.*(t90+t106-t116+m7.*r7x.*(t91+t7.*(t19-t67))+m7.*t7.*(t91+t7.*(t19-t67)).*(1.1e+1./1.25e+2)+m6.*r6x.*(t19-t67));
t134 = t133.*(3.3e+1./4.0e+2);
t144 = t22+t29+t121+t133;
t148 = t84+t102+t127+t129;
t152 = t30+t69+t120+t132;
t162 = -t11.*(t43-t50+t55-t71-t89+t126+t13.*(t96+m7.*r7z.*(t91+t7.*(t19-t67)))+m7.*(t64-t78).*(1.1e+1./1.25e+2)+m6.*r6x.*(t64-t78));
t163 = -t5.*(t43-t50+t55-t71-t89+t126+t13.*(t96+m7.*r7z.*(t91+t7.*(t19-t67)))+m7.*(t64-t78).*(1.1e+1./1.25e+2)+m6.*r6x.*(t64-t78));
t145 = t10.*t144;
t146 = t4.*t144.*(3.3e+1./4.0e+2);
t149 = t6.*t148;
t150 = t12.*t148;
t153 = t5.*t152;
t154 = t11.*t152;
t147 = -t146;
t151 = -t149;
t155 = t153.*(4.8e+1./1.25e+2);
t156 = t154.*(4.8e+1./1.25e+2);
t157 = t154.*(3.3e+1./4.0e+2);
t164 = t25+t138+t154;
t165 = t23+t33+t137+t153;
t166 = t4.*t165;
t168 = t10.*t165.*(3.3e+1./4.0e+2);
t170 = t44+t52+t57+t72+t151+t160;
t175 = t40+t47+t58+t61+t73+t74+t143+t150+t157+t159;
t167 = -t166;
t169 = -t168;
t171 = t5.*t170;
t172 = t11.*t170;
t176 = t4.*t175;
t177 = t10.*t175;
t173 = -t171;
t174 = t24+t145+t167;
t178 = -t176;
t179 = t35+t46+t48+t142+t156+t162+t173;
t180 = t4.*t179;
t181 = t10.*t179;
t182 = -t180;
t183 = -t181;
t185 = t26+t38+t177+t182;
mt1 = [t2.*(t8.*1.434694842+t27+t42+t143+t157+t178+t183)-t8.*(t2.*1.434694842-t3.*t164.*(7.9e+1./2.5e+2)+t9.*t174.*(7.9e+1./2.5e+2)+t3.*t185-t9.*(-t31+t41+t45+t53+t59+t123+t134+t141+t147+t155+t163+t169+t172)),t2.*(-1.02478203e-2)+t8.*2.015404659-t9.*t164.*(7.9e+1./2.5e+2)-t3.*t174.*(7.9e+1./2.5e+2)+t9.*t185+t3.*(-t31+t41+t45+t53+t59+t123+t134+t141+t147+t155+t163+t169+t172)];
mt2 = [t27+t42+t143+t157+t178+t183,-t41-t45-t53+t54+t122-t134-t155-t172+t11.*(t34-t70-t109+m6.*(t19-t67)+m7.*t7.*(t91+t7.*(t19-t67))).*(4.8e+1./1.25e+2)+t5.*(t43-t50+t55-t71-t89+t126+t13.*(t96+m7.*r7z.*(t91+t7.*(t19-t67)))+m7.*(t64-t78).*(1.1e+1./1.25e+2)+m6.*r6x.*(t64-t78)),t56-t58-t73-t74-t150+t6.*(t90+t106-t116+m7.*r7x.*(t91+t7.*(t19-t67))+m7.*t7.*(t91+t7.*(t19-t67)).*(1.1e+1./1.25e+2)+m6.*r6x.*(t19-t67))];
mt3 = [-t89+t126+t13.*(t96+m7.*r7z.*(t91+t7.*(t19-t67)))+m7.*(t64-t78).*(1.1e+1./1.25e+2)+m6.*r6x.*(t64-t78),t110+t111];
G = [mt1,mt2,mt3];
end
