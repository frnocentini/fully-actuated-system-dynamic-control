function Irow = inertia_row_2(rob,in2)
%% INERTIA_ROW_2 - Computation of the robot specific inertia matrix row for corresponding to joint 2 of 7. 
% ========================================================================= 
%    
%    Irow = inertia_row_2(rob,q) 
%    Irow = rob.inertia_row_2(q) 
%    
%  Description:: 
%    Given a full set of joint variables this function computes the 
%    inertia matrix row number 2 of 7 for PANDA. 
%    
%  Input:: 
%    rob: robot object of PANDA specific class 
%    q:  7-element vector of generalized 
%         coordinates 
%    Angles have to be given in radians! 
%    
%  Output:: 
%    Irow:  [1x7] row of the robot inertia matrix 
%    
%  Example:: 
%    --- 
%    
%  Known Bugs:: 
%    --- 
%    
%  TODO:: 
%    --- 
%    
%  References:: 
%    1) Robot Modeling and Control - Spong, Hutchinson, Vidyasagar 
%    2) Modelling and Control of Robot Manipulators - Sciavicco, Siciliano 
%    3) Introduction to Robotics, Mechanics and Control - Craig 
%    4) Modeling, Identification & Control of Robots - Khalil & Dombre 
%    
%  Authors:: 
%    This is an autogenerated function! 
%    Code generator written by: 
%    Joern Malzahn 
%    2012 RST, Technische Universitaet Dortmund, Germany 
%    http://www.rst.e-technik.tu-dortmund.de 
%    
%  See also coriolis.
%    
    
% Copyright (C) 1993-2023, by Peter I. Corke 
% Copyright (C) 2012-2023, by Joern Malzahn 
% 
% This file has been automatically generated with The Robotics Toolbox for Matlab (RTB). 
% 
% RTB and code generated with RTB is free software: you can redistribute it and/or modify 
% it under the terms of the GNU Lesser General Public License as published by 
% the Free Software Foundation, either version 3 of the License, or 
% (at your option) any later version. 
%  
% RTB is distributed in the hope that it will be useful, 
% but WITHOUT ANY WARRANTY; without even the implied warranty of 
% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the 
% GNU Lesser General Public License for more details. 
%  
% You should have received a copy of the GNU Leser General Public License 
% along with RTB.  If not, see <http://www.gnu.org/licenses/>. 
% 
% http://www.petercorke.com 
% 
% The code generation module emerged during the work on a project funded by 
% the German Research Foundation (DFG, BE1569/7-1). The authors gratefully  
% acknowledge the financial support. 

%% Bugfix
%  In some versions the symbolic toolbox writes the constant $pi$ in
%  capital letters. This way autogenerated functions might not work properly.
%  To fix this issue a local variable is introduced:
PI = pi;
   




%    This function was generated by the Symbolic Math Toolbox version 23.2.
%    14-Dec-2023 10:10:12
sympref('FloatingPointOutput',true)
syms m6 m7
syms r6x r6y r6z
syms r7x r7y r7z

q2 = in2(:,2);
q3 = in2(:,3);
q4 = in2(:,4);
q5 = in2(:,5);
q6 = in2(:,6);
q7 = in2(:,7);

t2 = cos(q3);
t3 = cos(q4);
t4 = cos(q5);
t5 = cos(q6);
t6 = cos(q7);
t7 = sin(q3);
t8 = sin(q4);
t9 = sin(q5);
t10 = sin(q6);
t11 = sin(q7);
t12 = t2.*t4;
t13 = t2.*t9;
t14 = t7.*t8.*t10;
t15 = t3.*t4.*t7;
t16 = t3.*t7.*t9;
t17 = t5.*t7.*t8;
t19 = t2.*(4.8e+1./1.25e+2);
t20 = t2.*(3.3e+1./4.0e+2);
t23 = t7.*(7.9e+1./2.5e+2);
t26 = t3.*t7.*(4.8e+1./1.25e+2);
t28 = t7.*t8.*(3.3e+1./4.0e+2);
t29 = t2.*t3.*(7.9e+1./2.5e+2);
t30 = t2.*t8.*(7.9e+1./2.5e+2);
t31 = t2.*t8.*(-3.3e+1./4.0e+2);
t42 = t2.*1.7847225e-1;
t43 = t2.*2.333074e-1;
t44 = t2.*1.8090652;
t45 = t7.*2.9094404;
t48 = t2.*t3.*4.6575375e-1;
t50 = t2.*t8.*1.783978;
t51 = t3.*t7.*1.183948e-1;
t53 = t7.*t8.*1.183948e-1;
t56 = t2.*t3.*1.1003752;
t58 = t2.*t8.*2.872815e-1;
t59 = t3.*t7.*2.333074e-1;
t62 = t7.*t8.*4.54293e-2;
t63 = t7.*t8.*2.1633e-4;
t70 = t2.*3.74791725e-3;
t71 = t2.*1.7847225e-5;
t76 = t7.*7.37251384e-2;
t80 = t2.*t3.*3.74127568e-2;
t81 = t2.*t8.*3.74127568e-2;
t82 = t2.*t3.*9.767571e-3;
t83 = t2.*t8.*9.767571e-3;
t86 = t3.*t7.*1.92478605e-2;
t87 = t2.*t8.*1.43556588e-2;
t88 = t2.*t8.*6.836028e-5;
t93 = t2.*t8.*7.56450915e-2;
t96 = t2.*t3.*(-3.74791725e-3);
t105 = t2.*t3.*5.9001177775e-2;
t120 = t2.*1.120888863e-6;
t123 = t2.*2.6238356e-7;
t124 = t7.*2.6238356e-7;
t126 = t3.*t7.*1.120888863e-6;
t129 = t3.*t7.*2.62507583e-7;
t130 = t7.*t8.*2.62507583e-7;
t151 = t7.*2.44881106623697e-1;
t159 = t3.*t7.*2.5709069623697e-2;
t164 = t2.*5.5580498301422e-2;
t167 = t2.*9.240993901422e-3;
t169 = t2.*2.73385590400355e-1;
t171 = t7.*t8.*1.632660816059e-3;
t177 = t7.*t8.*9.240993901422e-3;
t185 = t7.*t8.*1.3150721918838e-2;
t189 = t7.*9.0779833615521e-2;
t195 = t7.*t8.*1.5658737968e-5;
t21 = -t16;
t22 = -t20;
t24 = t12.*(1.1e+1./1.25e+2);
t25 = t3.*t20;
t32 = -t28;
t33 = t13+t15;
t34 = t16.*(1.1e+1./1.25e+2);
t35 = t17.*(1.1e+1./1.25e+2);
t49 = t12.*1.644108e-1;
t52 = t13.*1.644108e-1;
t54 = -t42;
t57 = t12.*2.1633e-4;
t60 = t13.*4.54293e-2;
t61 = -t53;
t65 = -t58;
t67 = t15.*1.644108e-1;
t68 = t16.*1.644108e-1;
t69 = t16.*2.1633e-4;
t73 = t15.*4.54293e-2;
t79 = t13.*3.74791725e-3;
t84 = t3.*t71;
t85 = t12.*1.7847225e-5;
t90 = -t80;
t94 = -t87;
t98 = t16.*1.7847225e-5;
t99 = -t93;
t104 = t15.*3.74791725e-3;
t110 = t19+t29+t31;
t121 = t17.*2.417464660303e-3;
t122 = t14.*1.88230244108e-3;
t125 = t12.*1.2066987492e-5;
t131 = t12.*7.2256604e-8;
t132 = t16.*1.2066987492e-5;
t133 = t17.*1.2066987492e-5;
t134 = t16.*7.2256604e-8;
t135 = t14.*7.2256604e-8;
t143 = t17.*3.150206e-9;
t144 = t14.*3.150206e-9;
t170 = t12.*1.632660816059e-3;
t172 = -t167;
t179 = t13.*1.9224763077146e-2;
t180 = t16.*1.632660816059e-3;
t182 = -t177;
t184 = t15.*1.9224763077146e-2;
t188 = t12.*1.997723604999e-2;
t193 = t16.*1.997723604999e-2;
t194 = t13.*1.5658737968e-5;
t196 = t12.*4.991057278e-6;
t197 = t13.*4.991057278e-6;
t199 = t15.*1.5658737968e-5;
t200 = t16.*4.991057278e-6;
t201 = t15.*4.991057278e-6;
t36 = -t34;
t37 = t12+t21;
t38 = t5.*t33;
t39 = t10.*t33;
t66 = -t60;
t74 = -t68;
t75 = -t69;
t77 = -t73;
t92 = -t85;
t111 = t22+t25+t30;
t112 = t23+t26+t32;
t115 = t4.*t110;
t117 = t9.*t110;
t127 = -t122;
t128 = -t125;
t139 = -t134;
t148 = -t143;
t183 = -t180;
t198 = -t196;
t40 = r6x.*t37;
t41 = r6y.*t37;
t46 = t6.*t37;
t47 = t11.*t37;
t72 = t39.*(1.1e+1./1.25e+2);
t78 = t17+t39;
t106 = -r6y.*(t14-t38);
t107 = -r6z.*(t14-t38);
t109 = -t11.*(t14-t38);
t113 = t4.*t112;
t114 = t9.*t112;
t116 = t5.*t111;
t118 = t10.*t111;
t119 = -t115;
t140 = t115.*2.1633;
t141 = t117.*2.1633;
t152 = t115.*1.644108e-1;
t153 = t117.*1.644108e-1;
t154 = t38.*1.88230244108e-3;
t160 = t39.*2.417464660303e-3;
t162 = t115.*4.54293e-2;
t163 = t117.*2.1633e-4;
t173 = t39.*1.2066987492e-5;
t176 = t38.*7.2256604e-8;
t186 = t38.*3.150206e-9;
t187 = t39.*3.150206e-9;
t203 = t11.*(t14-t38).*(-3.390625e-4);
t100 = r6x.*t78;
t101 = r7x.*t78;
t102 = r7y.*t78;
t103 = r6z.*t78;
t136 = t113.*2.1633;
t137 = t114.*2.1633;
t138 = t46+t109;
t149 = t113.*1.644108e-1;
t150 = t114.*1.644108e-1;
t155 = -r7y.*(t47+t6.*(t14-t38));
t157 = t113.*2.1633e-4;
t158 = t114.*4.54293e-2;
t166 = r7z.*(t47+t6.*(t14-t38));
t168 = t47.*3.390625e-4;
t174 = t46.*3.390625e-4;
t181 = -t176;
t190 = -t186;
t191 = -t187;
t204 = t114+t119;
t208 = t35+t72+t113+t117;
t142 = -t137;
t145 = r7x.*t138;
t146 = r7z.*t138;
t165 = -t158;
t205 = t5.*t204;
t206 = t10.*t204;
t209 = t6.*t208;
t210 = t11.*t208;
t215 = t100+t106+t113+t117;
t207 = -t206;
t211 = -t210;
t212 = t118+t205;
t216 = m6.*t215;
t213 = t6.*t212;
t214 = t11.*t212;
t217 = r6x.*t216;
t218 = r6y.*t216;
t220 = t40+t107+t116+t207;
t221 = m6.*(-t41+t103+t212);
t228 = t24+t36+t116+t145+t155+t207;
t222 = r6y.*t221;
t223 = r6z.*t221;
t224 = m6.*t220;
t229 = m7.*t228;
t234 = t102+t146+t211+t213;
t235 = t101+t166+t209+t214;
t225 = r6x.*t224;
t226 = r6z.*t224;
t230 = r7x.*t229;
t231 = r7y.*t229;
t232 = t229.*(1.1e+1./1.25e+2);
t236 = m7.*r7y.*t234;
t237 = m7.*r7z.*t234;
t238 = m7.*t6.*t234;
t239 = m7.*t11.*t234;
t240 = m7.*r7x.*t235;
t241 = m7.*r7z.*t235;
t242 = m7.*t6.*t235;
t243 = m7.*t11.*t235;
t249 = t224+t229;
t227 = -t225;
t233 = -t232;
t244 = -t239;
t246 = t239.*(1.1e+1./1.25e+2);
t248 = t242.*(1.1e+1./1.25e+2);
t250 = t5.*t249;
t251 = t10.*t249;
t254 = t174+t203+t230+t237;
t259 = -t6.*(t168-t231+t241+t6.*(t14-t38).*3.390625e-4);
t260 = -t11.*(t168-t231+t241+t6.*(t14-t38).*3.390625e-4);
t261 = t221+t238+t243;
t247 = -t246;
t252 = t250.*(3.3e+1./4.0e+2);
t255 = t6.*t254;
t256 = t11.*t254;
t262 = t5.*t261;
t263 = t10.*t261;
t267 = t52+t63+t67+t136+t141+t216+t242+t244;
t253 = -t252;
t258 = -t255;
t264 = -t262;
t265 = t263.*(3.3e+1./4.0e+2);
t268 = t4.*t267;
t269 = t9.*t267;
t277 = t48+t50+t51+t54+t57+t66+t75+t77+t250+t263;
t285 = t121+t128+t132+t144+t160+t190+t217+t223+t236+t240+t247+t248;
t288 = t127+t131+t139+t148+t154+t191+t218+t226+t256+t259;
t298 = -t4.*(-t71+t84+t88-t133-t135-t150+t152+t171-t173+t176+t188-t193-t197-t201-t222+t225+t232+t255+t11.*(t168-t231+t241+t6.*(t14-t38).*3.390625e-4));
t299 = -t9.*(-t71+t84+t88-t133-t135-t150+t152+t171-t173+t176+t188-t193-t197-t201-t222+t225+t232+t255+t11.*(t168-t231+t241+t6.*(t14-t38).*3.390625e-4));
t300 = t4.*(-t71+t84+t88-t133-t135-t150+t152+t171-t173+t176+t188-t193-t197-t201-t222+t225+t232+t255+t11.*(t168-t231+t241+t6.*(t14-t38).*3.390625e-4));
t266 = -t265;
t270 = t268.*(4.8e+1./1.25e+2);
t271 = t268.*(3.3e+1./4.0e+2);
t272 = t269.*(4.8e+1./1.25e+2);
t274 = t49+t62+t74+t140+t142+t251+t264;
t279 = t8.*t277;
t284 = t3.*t277.*(3.3e+1./4.0e+2);
t286 = t5.*t285;
t287 = t10.*t285;
t289 = t10.*t288;
t290 = t5.*t288;
t273 = -t271;
t275 = t4.*t274;
t276 = t9.*t274;
t291 = -t289;
t302 = t70+t94+t96+t149+t153+t179+t184+t195+t198+t200+t287+t290;
t278 = -t276;
t280 = t275.*(4.8e+1./1.25e+2);
t281 = t276.*(4.8e+1./1.25e+2);
t282 = t276.*(3.3e+1./4.0e+2);
t293 = t43+t56+t61+t65+t269+t275;
t303 = t4.*t302;
t304 = t9.*t302;
t283 = -t281;
t292 = t45+t59+t268+t278;
t294 = t3.*t293;
t295 = t8.*t293.*(3.3e+1./4.0e+2);
t305 = t83+t90+t129+t157+t162+t163+t165+t170+t172+t183+t185+t194+t199+t273+t282+t286+t291;
t296 = -t295;
t301 = t44+t279+t294;
t306 = t3.*t305;
t307 = t8.*t305;
t308 = t76+t81+t82+t120+t130+t159+t270+t283+t299+t303;
t309 = t3.*t308;
t310 = t8.*t308;
t311 = t79+t92+t98+t99+t104+t105+t124+t126+t169+t182+t253+t266+t272+t280+t284+t296+t300+t304;
t312 = t123+t151+t307+t309;
mt1 = [sin(q2).*(t2.*t292.*(-7.9e+1./2.5e+2)-t2.*t312+t7.*t311+t23.*t301+3.74387446e-3)-cos(q2).*(t86+t164+t189+t271-t282+t306-t310-8.6902768e-3),t2.*t301.*(7.9e+1./2.5e+2)+t2.*t311+t23.*t292+t7.*t312+3.2021503489e-2,-t86-t164-t189+t273+t282-t306+t310];
mt2 = [t2.*(-3.2217086146327e-2)-t79+t85+t93-t98-t104-t105-t126+t177+t252+t265-t272-t280+t298-t304,-t157+t158-t162-t163-t170+t180-t194-t199-t286+t289-t7.*t8.*3.13527046481e-3];
mt3 = [t12.*(-2.133520179065e-3)+t16.*2.133520179065e-3+t133+t135+t173+t181+t222+t227+t233+t258+t260,t17.*5.281249999999999e-4+t39.*5.281249999999999e-4+t236+t240];
Irow = [mt1,mt2,mt3];
end
