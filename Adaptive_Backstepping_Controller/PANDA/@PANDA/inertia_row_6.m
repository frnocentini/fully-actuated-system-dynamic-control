function Irow = inertia_row_6(rob,in2)
%% INERTIA_ROW_6 - Computation of the robot specific inertia matrix row for corresponding to joint 6 of 7. 
% ========================================================================= 
%    
%    Irow = inertia_row_6(rob,q) 
%    Irow = rob.inertia_row_6(q) 
%    
%  Description:: 
%    Given a full set of joint variables this function computes the 
%    inertia matrix row number 6 of 7 for PANDA. 
%    
%  Input:: 
%    rob: robot object of PANDA specific class 
%    q:  7-element vector of generalized 
%         coordinates 
%    Angles have to be given in radians! 
%    
%  Output:: 
%    Irow:  [1x7] row of the robot inertia matrix 
%    
%  Example:: 
%    --- 
%    
%  Known Bugs:: 
%    --- 
%    
%  TODO:: 
%    --- 
%    
%  References:: 
%    1) Robot Modeling and Control - Spong, Hutchinson, Vidyasagar 
%    2) Modelling and Control of Robot Manipulators - Sciavicco, Siciliano 
%    3) Introduction to Robotics, Mechanics and Control - Craig 
%    4) Modeling, Identification & Control of Robots - Khalil & Dombre 
%    
%  Authors:: 
%    This is an autogenerated function! 
%    Code generator written by: 
%    Joern Malzahn 
%    2012 RST, Technische Universitaet Dortmund, Germany 
%    http://www.rst.e-technik.tu-dortmund.de 
%    
%  See also coriolis.
%    
    
% Copyright (C) 1993-2023, by Peter I. Corke 
% Copyright (C) 2012-2023, by Joern Malzahn 
% 
% This file has been automatically generated with The Robotics Toolbox for Matlab (RTB). 
% 
% RTB and code generated with RTB is free software: you can redistribute it and/or modify 
% it under the terms of the GNU Lesser General Public License as published by 
% the Free Software Foundation, either version 3 of the License, or 
% (at your option) any later version. 
%  
% RTB is distributed in the hope that it will be useful, 
% but WITHOUT ANY WARRANTY; without even the implied warranty of 
% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the 
% GNU Lesser General Public License for more details. 
%  
% You should have received a copy of the GNU Leser General Public License 
% along with RTB.  If not, see <http://www.gnu.org/licenses/>. 
% 
% http://www.petercorke.com 
% 
% The code generation module emerged during the work on a project funded by 
% the German Research Foundation (DFG, BE1569/7-1). The authors gratefully  
% acknowledge the financial support. 

%% Bugfix
%  In some versions the symbolic toolbox writes the constant $pi$ in
%  capital letters. This way autogenerated functions might not work properly.
%  To fix this issue a local variable is introduced:
PI = pi;
   




%    This function was generated by the Symbolic Math Toolbox version 23.2.
%    14-Dec-2023 10:10:20
sympref('FloatingPointOutput',true)
syms m6 m7
syms r6x r6y r6z
syms r7x r7y r7z

q2 = in2(:,2);
q3 = in2(:,3);
q4 = in2(:,4);
q5 = in2(:,5);
q6 = in2(:,6);
q7 = in2(:,7);

t2 = cos(q3);
t3 = cos(q4);
t4 = cos(q5);
t5 = cos(q6);
t6 = cos(q7);
t7 = sin(q3);
t8 = sin(q4);
t9 = sin(q5);
t10 = sin(q6);
t11 = sin(q7);
t12 = m6.*r6x;
t13 = m6.*r6y;
t16 = r7z.^2;
t17 = t6.^2;
t18 = t11.^2;
t19 = r7x.*t6;
t20 = r6z.*t12;
t21 = r6z.*t13;
t22 = r7y.*t11;
t23 = -t13;
t24 = r6x.*t12;
t25 = r6y.*t13;
t26 = m7.*r7y.*r7z.*t6;
t27 = m7.*r7x.*r7z.*t11;
t30 = m7.*t6.*t16;
t32 = m7.*t11.*t16;
t52 = t6.*3.390625e-4;
t53 = t11.*3.390625e-4;
t28 = -t22;
t29 = m7.*r7z.*t17;
t31 = m7.*r7z.*t18;
t33 = -t26;
t34 = -t27;
t35 = t19+t28+1.1e+1./1.25e+2;
t37 = t23+t29+t31;
t59 = t21+t33+t34+1.2066987492e-5;
t36 = m7.*t35;
t42 = t5.*t37;
t43 = t10.*t37;
t64 = t5.*t59;
t65 = t10.*t59;
t38 = r7x.*t36;
t39 = r7y.*t36;
t41 = t12+t36;
t44 = t36.*(1.1e+1./1.25e+2);
t48 = t43.*(3.3e+1./4.0e+2);
t40 = -t39;
t46 = t5.*t41;
t47 = t10.*t41;
t49 = -t48;
t69 = t30+t38+t52;
t50 = t46.*(3.3e+1./4.0e+2);
t54 = t43+t46;
t57 = -t3.*t4.*(t42-t47);
t60 = t4.*(t42-t47).*(-4.8e+1./1.25e+2);
t61 = t9.*(t42-t47).*(-4.8e+1./1.25e+2);
t63 = t9.*(t42-t47).*(3.3e+1./4.0e+2);
t67 = t4.*t8.*(t42-t47).*(3.3e+1./4.0e+2);
t70 = t32+t40+t53;
t71 = t6.*t69;
t72 = t11.*t69;
t51 = -t50;
t56 = t8.*t54;
t58 = t3.*t54.*(3.3e+1./4.0e+2);
t73 = t6.*t70;
t74 = t11.*t70;
t75 = -t73;
t76 = t56+t57;
t80 = t24+t25+t44+t71+t74+2.133520179065e-3;
t77 = t20+t72+t75+7.2256604e-8;
t81 = t4.*t80;
t82 = t9.*t80;
t78 = t5.*t77;
t79 = t10.*t77;
t85 = -t9.*(t65-t78);
t86 = t4.*(t65-t78);
t87 = t63+t64+t79;
t88 = t3.*t87;
t89 = t8.*t87;
t90 = t61+t82+t86;
t93 = t49+t51+t58+t60+t67+t81+t85;
t91 = t3.*t90;
t92 = t8.*t90;
t94 = t89+t91;
Irow = [cos(q2).*(t63-t88+t92)-sin(q2).*(t7.*t76.*(7.9e+1./2.5e+2)+t2.*t94+t7.*t93-t2.*t9.*(t42-t47).*(7.9e+1./2.5e+2)),t2.*t76.*(-7.9e+1./2.5e+2)-t2.*t93+t7.*t94-t7.*t9.*(t42-t47).*(7.9e+1./2.5e+2),t63-t88+t92,t49+t51+t60+t81+t85,-t64-t79,t80,t33+t34];
end
