function Irow = inertia_row_5(rob,in2)
%% INERTIA_ROW_5 - Computation of the robot specific inertia matrix row for corresponding to joint 5 of 7. 
% ========================================================================= 
%    
%    Irow = inertia_row_5(rob,q) 
%    Irow = rob.inertia_row_5(q) 
%    
%  Description:: 
%    Given a full set of joint variables this function computes the 
%    inertia matrix row number 5 of 7 for PANDA. 
%    
%  Input:: 
%    rob: robot object of PANDA specific class 
%    q:  7-element vector of generalized 
%         coordinates 
%    Angles have to be given in radians! 
%    
%  Output:: 
%    Irow:  [1x7] row of the robot inertia matrix 
%    
%  Example:: 
%    --- 
%    
%  Known Bugs:: 
%    --- 
%    
%  TODO:: 
%    --- 
%    
%  References:: 
%    1) Robot Modeling and Control - Spong, Hutchinson, Vidyasagar 
%    2) Modelling and Control of Robot Manipulators - Sciavicco, Siciliano 
%    3) Introduction to Robotics, Mechanics and Control - Craig 
%    4) Modeling, Identification & Control of Robots - Khalil & Dombre 
%    
%  Authors:: 
%    This is an autogenerated function! 
%    Code generator written by: 
%    Joern Malzahn 
%    2012 RST, Technische Universitaet Dortmund, Germany 
%    http://www.rst.e-technik.tu-dortmund.de 
%    
%  See also coriolis.
%    
    
% Copyright (C) 1993-2023, by Peter I. Corke 
% Copyright (C) 2012-2023, by Joern Malzahn 
% 
% This file has been automatically generated with The Robotics Toolbox for Matlab (RTB). 
% 
% RTB and code generated with RTB is free software: you can redistribute it and/or modify 
% it under the terms of the GNU Lesser General Public License as published by 
% the Free Software Foundation, either version 3 of the License, or 
% (at your option) any later version. 
%  
% RTB is distributed in the hope that it will be useful, 
% but WITHOUT ANY WARRANTY; without even the implied warranty of 
% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the 
% GNU Lesser General Public License for more details. 
%  
% You should have received a copy of the GNU Leser General Public License 
% along with RTB.  If not, see <http://www.gnu.org/licenses/>. 
% 
% http://www.petercorke.com 
% 
% The code generation module emerged during the work on a project funded by 
% the German Research Foundation (DFG, BE1569/7-1). The authors gratefully  
% acknowledge the financial support. 

%% Bugfix
%  In some versions the symbolic toolbox writes the constant $pi$ in
%  capital letters. This way autogenerated functions might not work properly.
%  To fix this issue a local variable is introduced:
PI = pi;
   




%    This function was generated by the Symbolic Math Toolbox version 23.2.
%    14-Dec-2023 10:10:19
sympref('FloatingPointOutput',true)
syms m6 m7
syms r6x r6y r6z
syms r7x r7y r7z

q2 = in2(:,2);
q3 = in2(:,3);
q4 = in2(:,4);
q5 = in2(:,5);
q6 = in2(:,6);
q7 = in2(:,7);

t2 = cos(q3);
t3 = cos(q4);
t4 = cos(q5);
t5 = cos(q6);
t6 = cos(q7);
t7 = sin(q3);
t8 = sin(q4);
t9 = sin(q5);
t10 = sin(q6);
t11 = sin(q7);
t12 = r6z.^2;
t13 = r6x.*t5;
t14 = r7x.*t5;
t15 = r7y.*t5;
t16 = r6y.*t10;
t17 = m6.*r6z.*t5;
t18 = m6.*r6z.*t10;
t20 = r7y.*t6.*t10;
t21 = r7z.*t6.*t10;
t23 = r7x.*t10.*t11;
t24 = r7z.*t10.*t11;
t27 = m6.*t5.*t12;
t28 = m6.*t10.*t12;
t29 = t5.*t6.*(1.1e+1./1.25e+2);
t30 = t5.*t11.*(1.1e+1./1.25e+2);
t60 = t5.*2.417464660303e-3;
t61 = t10.*1.88230244108e-3;
t62 = t5.*1.2066987492e-5;
t63 = t6.*t10.*3.390625e-4;
t64 = t10.*t11.*3.390625e-4;
t65 = t10.*7.2256604e-8;
t66 = t5.*3.150206e-9;
t67 = t10.*3.150206e-9;
t19 = r6y.*t17;
t22 = r6x.*t18;
t25 = -t15;
t26 = -t16;
t32 = t20+t23;
t42 = t14+t21+t29;
t31 = t13+t26;
t36 = m7.*t32;
t45 = t24+t25+t30;
t46 = m7.*r7x.*t42;
t47 = m7.*r7z.*t42;
t48 = m7.*t6.*t42;
t49 = m7.*t11.*t42;
t33 = m6.*t31;
t37 = r7x.*t36;
t38 = r7y.*t36;
t40 = t36.*(1.1e+1./1.25e+2);
t41 = t18+t36;
t50 = m7.*r7y.*t45;
t51 = m7.*r7z.*t45;
t52 = m7.*t6.*t45;
t53 = m7.*t11.*t45;
t58 = t48.*(1.1e+1./1.25e+2);
t34 = r6x.*t33;
t35 = r6y.*t33;
t43 = t5.*t41;
t44 = t10.*t41;
t54 = -t50;
t56 = -t52;
t59 = t53.*(1.1e+1./1.25e+2);
t73 = t33+t48+t53+2.1633e-4;
t74 = t38+t47+t63;
t75 = t37+t51+t64;
t39 = -t35;
t55 = t43.*(3.3e+1./4.0e+2);
t68 = t17+t49+t56;
t76 = t4.*t73;
t77 = t9.*t73;
t78 = t6.*t74;
t79 = t11.*t74;
t81 = t6.*t75;
t82 = t11.*t75;
t104 = t27+t34+t46+t54+t58+t59+t60+t67;
t69 = t5.*t68;
t70 = t10.*t68;
t80 = -t79;
t84 = t76.*(4.8e+1./1.25e+2);
t85 = t76.*(3.3e+1./4.0e+2);
t86 = t77.*(4.8e+1./1.25e+2);
t105 = t5.*t104;
t106 = t10.*t104;
t107 = t28+t39+t61+t66+t78+t82;
t71 = -t70;
t72 = t70.*(3.3e+1./4.0e+2);
t87 = -t85;
t88 = -t86;
t91 = t44+t69-4.54293e-2;
t108 = t5.*t107;
t109 = t10.*t107;
t112 = t19+t22+t40+t62+t65+t80+t81-1.632660816059e-3;
t83 = t43+t71;
t92 = t9.*t91;
t93 = t4.*t91;
t110 = -t108;
t113 = t4.*t112;
t114 = t9.*t112;
t89 = t8.*t83;
t90 = t3.*t83.*(3.3e+1./4.0e+2);
t94 = -t93;
t95 = t92.*(4.8e+1./1.25e+2);
t96 = t92.*(3.3e+1./4.0e+2);
t97 = t93.*(4.8e+1./1.25e+2);
t99 = t76+t92;
t115 = t106+t110+1.5658737968e-5;
t98 = -t96;
t100 = t77+t94;
t116 = t4.*t115;
t117 = t9.*t115;
t101 = t3.*t100;
t103 = t8.*t100.*(3.3e+1./4.0e+2);
t118 = -t117;
t119 = t87+t98+t105+t109+3.13527046481e-3;
t122 = t84+t95+t114+t116;
t102 = -t101;
t120 = t3.*t119;
t121 = t8.*t119;
t123 = t8.*t122;
t124 = t3.*t122;
t111 = t89+t102;
t125 = -t123;
t127 = t121+t124;
t128 = t85+t96+t120+t125;
mt1 = [t128.*cos(q2)+sin(q2).*(t7.*(-t55+t72+t88+t90+t97+t103+t113+t118)+t2.*t99.*(7.9e+1./2.5e+2)+t7.*t111.*(7.9e+1./2.5e+2)+t2.*t127),t2.*(-t55+t72+t88+t90+t97+t103+t113+t118)-t7.*t99.*(7.9e+1./2.5e+2)+t2.*t111.*(7.9e+1./2.5e+2)-t7.*t127,t128,t55-t72+t86-t97-t113+t117,t105+t109+3.13527046481e-3,-t19-t22-t40-t62-t65+t79-t81];
mt2 = [t5.*(-5.281249999999999e-4)-t46+t50];
Irow = [mt1,mt2];
end
